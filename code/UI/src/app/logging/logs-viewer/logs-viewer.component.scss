.logs-container {
  margin-bottom: 2rem;
  height: calc(100vh - 8rem); /* Adjust based on your layout */
  display: flex;
  flex-direction: column;

  /* Filter section styling */  
  .filter-container {
    padding: 1rem 0;
    margin-bottom: 1rem;
    border-bottom: 1px solid var(--surface-border);
    transition: background-color var(--app-transition-speed);
  }

  ::ng-deep {
    /* Card styling - add subtle animation on hover */
    .p-card {
      height: 100%;
      display: flex;
      flex-direction: column;
      transition: box-shadow 0.3s;

      .p-card-content {
        flex: 1;
        padding: 0 !important;
        overflow: hidden;
        display: flex;
        flex-direction: column;
      }
    }

    /* Table styling - improved for readability */
    .p-datatable {
      flex: 1;
      display: flex;
      flex-direction: column;

      .p-datatable-wrapper {
        flex: 1;
      }

      .p-datatable-header {
        background-color: var(--surface-card);
        padding: 1rem;
        border-bottom: 1px solid var(--surface-border);
      }

      .p-datatable-thead > tr > th {
        background-color: var(--surface-section);
        color: var(--text-color);
        border-color: var(--surface-border);
        padding: 0.75rem 1rem;
        font-weight: 600;
        position: sticky;
        top: 0;
        z-index: 1;
        transition: background-color 0.2s;

        &:hover {
          background-color: var(--surface-hover);
        }
      }

      .p-datatable-tbody {
        > tr {
          transition: background-color 0.2s;
          border-radius: var(--border-radius);
          
          &:hover {
            background-color: var(--surface-hover);
          }

          &:nth-child(even) {
            background-color: var(--surface-ground);
          }

          > td {
            padding: 0.75rem 1rem;
            border-color: var(--surface-border);
            transition: background-color 0.2s;
          }
          
          /* Highlight rows with errors */
          &.error-row > td:first-child {
            border-left: 4px solid var(--red-500);
          }
          
          &.warning-row > td:first-child {
            border-left: 4px solid var(--yellow-500);
          }
        }
      }

      .p-paginator {
        background-color: var(--surface-section);
        border-color: var(--surface-border);
        padding: 0.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
    }

    /* Exception handling with improved styling */
    .exception-row {
      background-color: var(--surface-hover) !important;
      transition: max-height 0.3s;
      overflow: hidden;
    }

    .exception-cell {
      padding: 0 !important;
    }

    .exception-content {
      padding: 0.75rem 1rem;
      background-color: var(--surface-hover);
      font-family: var(--font-family-monospace, monospace);
      white-space: pre-wrap;
      font-size: 0.85rem;
      overflow: auto;
      max-height: 300px;
      color: var(--text-color);
      border-top: 1px dashed var(--surface-border);
      border-radius: 0 0 var(--border-radius) var(--border-radius);
      box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
      transition: all 0.3s;
    }
    
    /* Tag styling with improved visibility */
    .p-tag {
      font-weight: 600;
      border-radius: var(--border-radius);
      transition: all 0.2s;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);

      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      &.p-tag-danger {
        background-color: var(--red-500);
        color: var(--red-50);
      }
      
      &.p-tag-warning {
        background-color: var(--yellow-500);
        color: var(--yellow-900);
      }
      
      &.p-tag-info {
        background-color: var(--blue-500);
        color: var(--blue-50);
      }
      
      &.p-tag-success {
        background-color: var(--green-500);
        color: var(--green-50);
      }
    }

    /* Form controls styling */
    .p-dropdown {
      min-width: 180px;
      border-radius: var(--border-radius);
      transition: box-shadow 0.2s, border-color 0.2s;
      
      &:hover, &.p-focus {
        border-color: var(--primary-color);
      }
      
      &.p-focus {
        box-shadow: 0 0 0 1px var(--primary-100);
      }
      
      .p-dropdown-label {
        padding: 0.5rem 0.75rem;
      }

      /* Fix for consistent height dropdowns */
      &.fixed-height-dropdown {
        .p-dropdown-label {
          display: flex;
          align-items: center;
          height: 2.5rem; /* Fixed height for consistency */
        }

        .level-indicator {
          display: flex;
          align-items: center;
          height: 100%;
        }

        /* Ensure tags inside dropdowns maintain proper sizing */
        .level-tag {
          padding: 0.25rem 0.5rem;
          font-size: 0.85rem;
          height: auto;
          line-height: 1;
        }
      }
    }

    .p-input-icon-left {
      width: 100%;
      max-width: 300px;

      input {
        border-radius: var(--border-radius);
        width: 100%;
        transition: box-shadow 0.2s, border-color 0.2s;
        padding: 0.5rem 0.75rem 0.5rem 2rem;
        
        &:hover, &:focus {
          border-color: var(--primary-color);
        }
        
        &:focus {
          box-shadow: 0 0 0 1px var(--primary-100);
        }
      }
      
      i {
        left: 0.75rem;
        color: var(--text-color-secondary);
      }
    }

    /* Button styling with micro-interactions */
    .p-button {
      border-radius: var(--border-radius);
      transition: background-color 0.2s, color 0.2s, border-color 0.2s, transform 0.2s, box-shadow 0.2s;
      
      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }
      
      &:active {
        transform: translateY(0);
      }
      
      &.p-button-outlined {
        background-color: transparent;
        color: var(--primary-color);
        border-color: var(--primary-color);
        
        &:hover {
          background-color: var(--primary-50);
        }
      }
      
      &.p-button-text {
        &:hover {
          background-color: var(--surface-hover);
        }
      }
      
      &.p-button-rounded {
        &:hover {
          transform: translateY(-1px) rotate(15deg);
        }
      }
    }

    /* Empty state styling */
    .empty-message {
      padding: 2rem;
      text-align: center;
      color: var(--text-color-secondary);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 300px;
      
      i {
        font-size: 3rem;
        margin-bottom: 1rem;
        opacity: 0.5;
        color: var(--primary-color);
      }
      
      .empty-text {
        font-size: 1.2rem;
        margin-bottom: 1rem;
      }
    }
  }
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  .logs-container {
    height: calc(100vh - 7rem);
    
    .filter-container {
      flex-direction: column;
      gap: 1rem;
      
      > div {
        width: 100%;
        
        .p-dropdown, .p-input-icon-left {
          width: 100%;
          max-width: 100%;
        }
      }
    }
    
    ::ng-deep {
      .p-datatable {
        .p-datatable-thead > tr > th {
          padding: 0.5rem;
        }
        
        .p-datatable-tbody > tr > td {
          padding: 0.5rem;
        }
      }
    }
  }
}