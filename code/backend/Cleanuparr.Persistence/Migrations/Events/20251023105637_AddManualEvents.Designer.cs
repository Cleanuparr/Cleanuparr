// <auto-generated />
using System;
using Cleanuparr.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cleanuparr.Persistence.Migrations.Events
{
    [DbContext(typeof(EventsContext))]
    [Migration("20251023105637_AddManualEvents")]
    partial class AddManualEvents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Cleanuparr.Persistence.Models.Events.AppEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("event_type");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("severity");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.Property<Guid?>("TrackingId")
                        .HasColumnType("TEXT")
                        .HasColumnName("tracking_id");

                    b.HasKey("Id")
                        .HasName("pk_events");

                    b.HasIndex("EventType")
                        .HasDatabaseName("ix_events_event_type");

                    b.HasIndex("Message")
                        .HasDatabaseName("ix_events_message");

                    b.HasIndex("Severity")
                        .HasDatabaseName("ix_events_severity");

                    b.HasIndex("Timestamp")
                        .IsDescending()
                        .HasDatabaseName("ix_events_timestamp");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("Cleanuparr.Persistence.Models.Events.ManualEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_resolved");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("severity");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT")
                        .HasColumnName("timestamp");

                    b.HasKey("Id")
                        .HasName("pk_manual_events");

                    b.HasIndex("IsResolved")
                        .HasDatabaseName("ix_manual_events_is_resolved");

                    b.HasIndex("Message")
                        .HasDatabaseName("ix_manual_events_message");

                    b.HasIndex("Severity")
                        .HasDatabaseName("ix_manual_events_severity");

                    b.HasIndex("Timestamp")
                        .IsDescending()
                        .HasDatabaseName("ix_manual_events_timestamp");

                    b.ToTable("manual_events", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
